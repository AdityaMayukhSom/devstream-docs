import{_ as e,c as t,a0 as i,o as r}from"./chunks/framework.BIwO_W-P.js";const u=JSON.parse('{"title":"Function: HealthApiFp()","description":"","frontmatter":{},"headers":[],"relativePath":"functions/HealthApiFp.md","filePath":"functions/HealthApiFp.md"}'),s={name:"functions/HealthApiFp.md"};function o(h,a,n,l,p,c){return r(),t("div",null,a[0]||(a[0]=[i('<p><a href="./../">@adityamayukhsom/client-typescript</a> / HealthApiFp</p><h1 id="function-healthapifp" tabindex="-1">Function: HealthApiFp() <a class="header-anchor" href="#function-healthapifp" aria-label="Permalink to &quot;Function: HealthApiFp()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HealthApiFp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">configuration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> object</span></span></code></pre></div><p>HealthApi - functional programming interface TypeScript Client Stubs for Devstream</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="configuration" tabindex="-1">configuration? <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;configuration?&quot;">​</a></h3><p><a href="./../classes/Configuration.html"><code>Configuration</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="healthcheck" tabindex="-1">healthCheck() <a class="header-anchor" href="#healthcheck" aria-label="Permalink to &quot;healthCheck()&quot;">​</a></h3><p>Health check for the API.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><code>RawAxiosRequestConfig</code></p><p>Override http request option.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;(<code>axios</code>?, <code>basePath</code>?) =&gt; <code>AxiosPromise</code>&lt;<a href="./../interfaces/Health.html"><code>Health</code></a>&gt;&gt;</p><h4 id="throws" tabindex="-1">Throws <a class="header-anchor" href="#throws" aria-label="Permalink to &quot;Throws&quot;">​</a></h4><h2 id="export" tabindex="-1">Export <a class="header-anchor" href="#export" aria-label="Permalink to &quot;Export&quot;">​</a></h2>',19)]))}const k=e(s,[["render",o]]);export{u as __pageData,k as default};
