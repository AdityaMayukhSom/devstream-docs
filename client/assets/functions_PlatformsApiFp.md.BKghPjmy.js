import{_ as e,c as t,a0 as o,o as r}from"./chunks/framework.BIwO_W-P.js";const m=JSON.parse('{"title":"Function: PlatformsApiFp()","description":"","frontmatter":{},"headers":[],"relativePath":"functions/PlatformsApiFp.md","filePath":"functions/PlatformsApiFp.md"}'),i={name:"functions/PlatformsApiFp.md"};function s(n,a,l,h,c,d){return r(),t("div",null,a[0]||(a[0]=[o('<p><a href="./../">@adityamayukhsom/client-typescript</a> / PlatformsApiFp</p><h1 id="function-platformsapifp" tabindex="-1">Function: PlatformsApiFp() <a class="header-anchor" href="#function-platformsapifp" aria-label="Permalink to &quot;Function: PlatformsApiFp()&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PlatformsApiFp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">configuration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> object</span></span></code></pre></div><p>PlatformsApi - functional programming interface TypeScript Client Stubs for Devstream</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="configuration" tabindex="-1">configuration? <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;configuration?&quot;">​</a></h3><p><a href="./../classes/Configuration.html"><code>Configuration</code></a></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><h3 id="connectplatform" tabindex="-1">connectPlatform() <a class="header-anchor" href="#connectplatform" aria-label="Permalink to &quot;connectPlatform()&quot;">​</a></h3><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="platformid" tabindex="-1">platformId <a class="header-anchor" href="#platformid" aria-label="Permalink to &quot;platformId&quot;">​</a></h5><p><a href="./../enumerations/Platform.html"><code>Platform</code></a></p><h5 id="options" tabindex="-1">options? <a class="header-anchor" href="#options" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><code>RawAxiosRequestConfig</code></p><p>Override http request option.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;(<code>axios</code>?, <code>basePath</code>?) =&gt; <code>AxiosPromise</code>&lt;<code>void</code>&gt;&gt;</p><h4 id="throws" tabindex="-1">Throws <a class="header-anchor" href="#throws" aria-label="Permalink to &quot;Throws&quot;">​</a></h4><h3 id="disconnectplatform" tabindex="-1">disconnectPlatform() <a class="header-anchor" href="#disconnectplatform" aria-label="Permalink to &quot;disconnectPlatform()&quot;">​</a></h3><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="platformid-1" tabindex="-1">platformId <a class="header-anchor" href="#platformid-1" aria-label="Permalink to &quot;platformId&quot;">​</a></h5><p><a href="./../enumerations/Platform.html"><code>Platform</code></a></p><h5 id="options-1" tabindex="-1">options? <a class="header-anchor" href="#options-1" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><code>RawAxiosRequestConfig</code></p><p>Override http request option.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;(<code>axios</code>?, <code>basePath</code>?) =&gt; <code>AxiosPromise</code>&lt;<code>void</code>&gt;&gt;</p><h4 id="throws-1" tabindex="-1">Throws <a class="header-anchor" href="#throws-1" aria-label="Permalink to &quot;Throws&quot;">​</a></h4><h3 id="syncallexternalplatforms" tabindex="-1">syncAllExternalPlatforms() <a class="header-anchor" href="#syncallexternalplatforms" aria-label="Permalink to &quot;syncAllExternalPlatforms()&quot;">​</a></h3><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="platformsyncrequest" tabindex="-1">platformSyncRequest <a class="header-anchor" href="#platformsyncrequest" aria-label="Permalink to &quot;platformSyncRequest&quot;">​</a></h5><p><a href="./../interfaces/PlatformSyncRequest.html"><code>PlatformSyncRequest</code></a></p><h5 id="options-2" tabindex="-1">options? <a class="header-anchor" href="#options-2" aria-label="Permalink to &quot;options?&quot;">​</a></h5><p><code>RawAxiosRequestConfig</code></p><p>Override http request option.</p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;(<code>axios</code>?, <code>basePath</code>?) =&gt; <code>AxiosPromise</code>&lt;<code>void</code>&gt;&gt;</p><h4 id="throws-2" tabindex="-1">Throws <a class="header-anchor" href="#throws-2" aria-label="Permalink to &quot;Throws&quot;">​</a></h4><h2 id="export" tabindex="-1">Export <a class="header-anchor" href="#export" aria-label="Permalink to &quot;Export&quot;">​</a></h2>',40)]))}const u=e(i,[["render",s]]);export{m as __pageData,u as default};
